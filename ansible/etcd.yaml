- name: etcd - ssl
  become: true
  become_user: root
  hosts: etcd
  vars:
    CFSSL_VERSION: R1.2
  tasks:
  - name: Install etcd
    block:
    - name: "install cfssl: clean slate - 0"
      file:
        path: "/tmp/cfssl"
        state: absent

    - name: "install cfssl: clean slate - 1"
      file:
        path: "/tmp/cfssljson"
        state: absent

    - name: get cfssl
      get_url:
        dest: /usr/local/bin/cfssl
        tmp_dest: /tmp
        mode: u+rwx
        group: atomicpi
        owner: admin
        url: https://pkg.cfssl.org/{{ CFSSL_VERSION }}/cfssl_linux-amd64

    - name: get cfssljson
      get_url:
        dest: /usr/local/bin/cfssljson
        tmp_dest: /tmp
        mode: u+rwx
        group: atomicpi
        owner: admin
        url: https://pkg.cfssl.org/{{ CFSSL_VERSION }}/cfssljson_linux-amd64

  - name: create cert
    block:
    - name: create certs directory
      file:
        path: /etc/certs
        state: directory
        owner: admin
        group: atomicpi

    - name: sent rootcert configuration
      template:
        dest: /etc/certs/etcd-root-ca-csr.json
        src: ./etcd-ca-csr.j2
        owner: admin
        group: atomicpi
        force: yes

    - name: generate root cert
      shell: |
        cfssl gencert -initca=true /etc/certs/etcd-root-ca-csr.json | cfssljson -bare /etc/certs/etcd-root-ca
      args:
        warn: no

    - name: verify
      command:
        argv:
          - openssl
          - x509
          - -in
          - /etc/certs/etcd-root-ca.pem
          - -noout

    - name: send cert generation configuration
      template:
        dest: /etc/certs/etcd-gencert.json
        src: ./gencert-conf.j2
        owner: admin
        group: atomicpi
        force: yes

  - name: create local-issued certificate
    block:
    - name: sent local issued template
      template:
        dest: /etc/certs/etcd-ca-csr.json
        src: ./etcd-ca-csr.j2
        owner: admin
        group: atomicpi
        force: yes

    - name: generate cert
      shell: |
        cfssl gencert --ca /etc/certs/etcd-root-ca.pem \
        --ca-key /etc/certs/etcd-root-ca-key.pem --config /etc/certs/etcd-gencert.json \
        /etc/certs/etcd-ca-csr.json | cfssljson -bare /etc/certs/s1
      args:
        warn: no

    - name: verify
      command:
        argv:
          - openssl
          - x509
          - -in
          - /etc/certs/s1.pem
          - -noout

    - name: chown certs directory
      file:
        path: /etc/certs
        state: directory
        recurse: yes
        owner: admin
        group: atomicpi

  - name: fetch certs from store
    block:
    - name: copy down certs - ca-csr.json
      fetch:
        dest: ./certs/
        src: /etc/certs/s1-csr.json

    - name: copy down certs - s1.csr
      fetch:
        dest: ./certs/
        src: /etc/certs/s1.csr

    - name: copy down certs - s1 private key
      fetch:
        dest: ./certs/
        src: /etc/certs/s1-key.pem

# copy to nodes
- name: nodes
  hosts: nodes
  become: true
  become_user: root
  tasks:
  - name: copy certs to workers - push
    copy:
      src: ./certs/
      dest: /home/admin/certs/
      group: atomicpi

# install etcd binary
- name: etcd - install
  become: true
  become_user: root
  hosts: etcd
  vars:
    ETCD_VERSION: v3.3.8
    DOWNLOAD_URL: https://github.com/coreos/etcd/releases/download

  tasks:
  - name: download tarball from github
    get_url:
      dest: /tmp/etcd-{{ ETCD_VERSION }}.tar.gz
      group: atomicpi
      owner: admin
      url: "{{ DOWNLOAD_URL }}/{{ ETCD_VERSION }}/etcd-{{ ETCD_VERSION }}-linux-amd64.tar.gz"

  - name: create etcd directory
    file:
      path: /etc/etcd
      state: directory
      group: atomicpi
      owner: admin

  - name: unpack tarball
    unarchive:
      src: /tmp/etcd-{{ ETCD_VERSION }}.tar.gz
      dest: /etc/etcd
      group: atomicpi
      owner: admin
      remote_src: yes
      extra_opts:
        - --strip-components=1

# systemd
- name: systemd
  become: true
  become_user: root
  hosts: etcd
  tasks:
  - name: render service
    template:
      dest: /etc/systemd/system/s1.service
      src: ./etcd-service.j2
      owner: admin
      group: atomicpi
      force: yes

  - name: start service
    ansible.builtin.systemd:
      state: started
      daemon_reload: yes
      name: "s1.service"
      scope: system
